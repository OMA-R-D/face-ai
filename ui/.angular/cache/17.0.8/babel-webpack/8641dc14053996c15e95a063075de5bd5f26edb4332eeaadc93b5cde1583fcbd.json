{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./model-statistics.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng2-charts\";\nimport * as i4 from \"@ngx-translate/core\";\nfunction ModelStatisticsComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"canvas\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"datasets\", ctx_r0.lineChartData)(\"labels\", ctx_r0.labels)(\"options\", ctx_r0.lineChartOptions)(\"legend\", false)(\"type\", \"line\");\n  }\n}\nfunction ModelStatisticsComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"models.statistics_data_msg\"), \" \");\n  }\n}\nexport let ModelStatisticsComponent = /*#__PURE__*/(() => {\n  class ModelStatisticsComponent {\n    constructor(statsService) {\n      this.statsService = statsService;\n      // Array of different segments in chart\n      this.lineChartData = [{\n        data: []\n      }];\n      // Define chart options\n      this.lineChartOptions = {\n        responsive: true,\n        legend: {\n          labels: {\n            fontFamily: \"'Poppins', sans-serif\"\n          }\n        }\n      };\n      // Define colors of chart segments\n      this.lineChartColors = [{\n        backgroundColor: 'rgba(140,151,167,0.5)',\n        borderColor: 'rgb(4,35,77)'\n      }];\n    }\n    ngOnChanges() {\n      this.labels = this.type === 'month' ? this.getMonth(Object.values(this.statistics)) : this.getDays(Object.values(this.statistics));\n    }\n    getMonth(stats) {\n      const monthStats = this.statsService.getMonthStats(stats);\n      this.lineChartData = [{\n        data: monthStats.map(el => el.requestCount)\n      }];\n      return monthStats.map(el => el.createdDate);\n    }\n    getDays(stats) {\n      const dayStats = this.statsService.getDays(stats);\n      this.lineChartData = [{\n        data: dayStats.map(el => el.requestCount)\n      }];\n      return dayStats.map(el => el.createdDate);\n    }\n    static #_ = this.ɵfac = function ModelStatisticsComponent_Factory(t) {\n      return new (t || ModelStatisticsComponent)(i0.ɵɵdirectiveInject(i1.ModelStatsService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ModelStatisticsComponent,\n      selectors: [[\"model-statistics\"]],\n      inputs: {\n        statistics: \"statistics\",\n        type: \"type\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"statistics-container\"], [4, \"ngIf\", \"ngIfElse\"], [\"noData\", \"\"], [\"height\", \"100px\", \"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"legend\", \"type\"], [1, \"err-msg\"]],\n      template: function ModelStatisticsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, ModelStatisticsComponent_ng_container_1_Template, 2, 5, \"ng-container\", 1)(2, ModelStatisticsComponent_ng_template_2_Template, 3, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r2 = i0.ɵɵreference(3);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.statistics[0].createdDate)(\"ngIfElse\", _r2);\n        }\n      },\n      dependencies: [i2.NgIf, i3.BaseChartDirective, i4.TranslatePipe],\n      styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\np[_ngcontent-%COMP%]{color:#8c97a7;text-align:center}\"]\n    });\n  }\n  return ModelStatisticsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}