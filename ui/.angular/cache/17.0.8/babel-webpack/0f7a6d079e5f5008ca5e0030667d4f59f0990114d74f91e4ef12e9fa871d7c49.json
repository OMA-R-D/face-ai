{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, switchMap, map } from 'rxjs/operators';\nimport { getMailServiceStatus, getMailServiceStatusFail, getMailServiceStatusSuccess } from './actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/mail-service/mail-service.service\";\nimport * as i2 from \"@ngrx/effects\";\nimport * as i3 from \"@ngrx/store\";\nexport let MailServiceEffects = /*#__PURE__*/(() => {\n  class MailServiceEffects {\n    constructor(mailService, actions, store) {\n      this.mailService = mailService;\n      this.actions = actions;\n      this.store = store;\n      //@createEffect({ dispatch: false })\n      this.getMailServiceStatus$ = createEffect(() => this.actions.pipe(ofType(getMailServiceStatus), switchMap(() => this.mailService.getStatus().pipe(map(status => getMailServiceStatusSuccess(status)), catchError(error => of(getMailServiceStatusFail(error)))))));\n    }\n    static #_ = this.ɵfac = function MailServiceEffects_Factory(t) {\n      return new (t || MailServiceEffects)(i0.ɵɵinject(i1.MailService), i0.ɵɵinject(i2.Actions), i0.ɵɵinject(i3.Store));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MailServiceEffects,\n      factory: MailServiceEffects.ɵfac\n    });\n  }\n  return MailServiceEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}