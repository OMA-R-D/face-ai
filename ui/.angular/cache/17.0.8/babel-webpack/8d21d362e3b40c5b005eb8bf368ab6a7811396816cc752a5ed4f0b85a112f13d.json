{"ast":null,"code":"/*\n * Copyright (c) 2020 the original author or authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nimport { EventEmitter } from '@angular/core';\nimport { filter, first } from 'rxjs/operators';\nimport { ChangePasswordDialogComponent } from '../change-password-dialog/change-password-dialog.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { EditUserInfoDialogComponent } from '../edit-user-info-dialog/edit-user-info-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/toolbar\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/menu\";\nimport * as i8 from \"@angular/material/icon\";\nfunction ToolBarComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ToolBarComponent_ng_container_9_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.goSignUp());\n    });\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 1, \"toolbar.signup\"));\n  }\n}\nfunction ToolBarComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 13);\n    i0.ɵɵlistener(\"menuClosed\", function ToolBarComponent_ng_container_10_Template_button_menuClosed_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.changeArrowIcon());\n    })(\"menuOpened\", function ToolBarComponent_ng_container_10_Template_button_menuOpened_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.changeArrowIcon());\n    });\n    i0.ɵɵelementStart(2, \"div\", 14);\n    i0.ɵɵelement(3, \"img\", 15);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementStart(5, \"span\", 16);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"mat-icon\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", i0.ɵɵpipeBind1(4, 6, \"toolbar.user_avatar_info\"));\n    i0.ɵɵproperty(\"src\", ctx_r1.userAvatarInfo, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r1.userFirstName, \" \", ctx_r1.userLastName, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"svgIcon\", ctx_r1.openMenu ? \"expand-less\" : \"expand-more\");\n  }\n}\nexport let ToolBarComponent = /*#__PURE__*/(() => {\n  class ToolBarComponent {\n    constructor(dialog, translate, router) {\n      this.dialog = dialog;\n      this.translate = translate;\n      this.router = router;\n      this.logout = new EventEmitter();\n      this.signUp = new EventEmitter();\n      this.changePassword = new EventEmitter();\n      this.editUserInfo = new EventEmitter();\n      this.openMenu = false;\n    }\n    changeArrowIcon() {\n      this.openMenu = !this.openMenu;\n    }\n    goSignUp() {\n      this.signUp.emit();\n    }\n    doLogout() {\n      if (this.itemsInProgress) {\n        this.openDialog(true);\n      } else {\n        this.logout.emit();\n      }\n    }\n    onChangePassword() {\n      this.dialog.open(ChangePasswordDialogComponent, {\n        panelClass: 'custom-mat-dialog',\n        data: {\n          entityType: this.translate.instant('applications.header.title'),\n          changePassword: result => {\n            this.changePassword.emit(result);\n            return this.passwordChangeResult;\n          }\n        }\n      });\n    }\n    onEditUserInfo() {\n      const dialog = this.dialog.open(EditUserInfoDialogComponent, {\n        panelClass: 'custom-mat-dialog',\n        data: {\n          firstName: this.userFirstName,\n          lastName: this.userLastName\n        }\n      });\n      dialog.afterClosed().pipe(first(), filter(result => result)).subscribe(result => this.editUserInfo.emit(result));\n    }\n    onNavigate(path, id) {\n      this.itemsInProgress ? this.openDialog(false, path, id) : this.router.navigate([path], {\n        queryParams: {\n          app: id\n        }\n      });\n    }\n    openDialog(isLogout, path, id) {\n      const dialog = this.dialog.open(ConfirmDialogComponent, {\n        panelClass: 'custom-mat-dialog',\n        data: {\n          title: this.translate.instant('org_users.confirm_dialog.title'),\n          description: this.translate.instant('org_users.confirm_dialog.confirmation_question')\n        }\n      });\n      dialog.afterClosed().subscribe(confirm => {\n        if (!confirm) return;\n        if (isLogout) {\n          this.logout.emit();\n        } else {\n          this.router.navigate([path], {\n            queryParams: {\n              app: id\n            }\n          });\n        }\n      });\n    }\n    static #_ = this.ɵfac = function ToolBarComponent_Factory(t) {\n      return new (t || ToolBarComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ToolBarComponent,\n      selectors: [[\"app-tool-bar\"]],\n      inputs: {\n        userAvatarInfo: \"userAvatarInfo\",\n        userFirstName: \"userFirstName\",\n        userLastName: \"userLastName\",\n        isUserInfoAvailable: \"isUserInfoAvailable\",\n        itemsInProgress: \"itemsInProgress\",\n        passwordChangeResult: \"passwordChangeResult\"\n      },\n      outputs: {\n        logout: \"logout\",\n        signUp: \"signUp\",\n        changePassword: \"changePassword\",\n        editUserInfo: \"editUserInfo\"\n      },\n      decls: 25,\n      vars: 18,\n      consts: [[1, \"header\"], [1, \"container\"], [1, \"header--logo\"], [\"mat-flat-button\", \"\", 1, \"header--logo_link\", 3, \"click\"], [\"src\", \"assets/img/face-recognition-logo.png\", 1, \"logo-main\", 3, \"alt\"], [\"src\", \"assets/img/face-recognition-logo-mobile.svg\", 1, \"logo-mobile\", 3, \"alt\"], [1, \"header--user-info\"], [4, \"ngIf\"], [\"xPosition\", \"before\", 3, \"overlapTrigger\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"mat-menu-item\", \"\", 1, \"button-warn\", 3, \"click\"], [\"mat-flat-button\", \"\", 1, \"user-info--btn\", 3, \"click\"], [\"mat-flat-button\", \"\", 1, \"user-info--btn\", 3, \"matMenuTriggerFor\", \"menuClosed\", \"menuOpened\"], [1, \"user-info--btn_wrapper\"], [1, \"avatar\", 3, \"src\", \"alt\"], [1, \"name\"], [\"inline\", \"true\", 3, \"svgIcon\"]],\n      template: function ToolBarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"div\", 2)(3, \"a\", 3);\n          i0.ɵɵlistener(\"click\", function ToolBarComponent_Template_a_click_3_listener() {\n            return ctx.onNavigate(\"/\");\n          });\n          i0.ɵɵelement(4, \"img\", 4);\n          i0.ɵɵpipe(5, \"translate\");\n          i0.ɵɵelement(6, \"img\", 5);\n          i0.ɵɵpipe(7, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 6);\n          i0.ɵɵtemplate(9, ToolBarComponent_ng_container_9_Template, 5, 3, \"ng-container\", 7)(10, ToolBarComponent_ng_container_10_Template, 8, 8, \"ng-container\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"mat-menu\", 8, 9)(13, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function ToolBarComponent_Template_button_click_13_listener() {\n            return ctx.onEditUserInfo();\n          });\n          i0.ɵɵelementStart(14, \"span\");\n          i0.ɵɵtext(15);\n          i0.ɵɵpipe(16, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function ToolBarComponent_Template_button_click_17_listener() {\n            return ctx.onChangePassword();\n          });\n          i0.ɵɵelementStart(18, \"span\");\n          i0.ɵɵtext(19);\n          i0.ɵɵpipe(20, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function ToolBarComponent_Template_button_click_21_listener() {\n            return ctx.doLogout();\n          });\n          i0.ɵɵelementStart(22, \"span\");\n          i0.ɵɵtext(23);\n          i0.ɵɵpipe(24, \"translate\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"alt\", i0.ɵɵpipeBind1(5, 8, \"toolbar.logo\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵpropertyInterpolate(\"alt\", i0.ɵɵpipeBind1(7, 10, \"toolbar.logo\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isUserInfoAvailable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isUserInfoAvailable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"overlapTrigger\", false);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 12, \"toolbar.user_info\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 14, \"toolbar.change_password\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 16, \"toolbar.logout\"));\n        }\n      },\n      dependencies: [i4.NgIf, i5.MatToolbar, i5.MatToolbarRow, i6.MatAnchor, i6.MatButton, i7.MatMenu, i7.MatMenuItem, i7.MatMenuTrigger, i8.MatIcon, i2.TranslatePipe],\n      styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.header[_ngcontent-%COMP%]{position:relative;z-index:10;height:95px;justify-content:center;background:#f5f7fb}.header[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]{justify-content:space-between;padding:0 45px}.header--logo[_ngcontent-%COMP%]{display:flex}.header--logo_link[_ngcontent-%COMP%]{padding:0;min-width:0}.header--logo_link[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{background:#f5f7fb}@media (max-width: 575px){.header--logo_link[_ngcontent-%COMP%]   .logo-main[_ngcontent-%COMP%]{display:none}}.header--logo_link[_ngcontent-%COMP%]   .logo-mobile[_ngcontent-%COMP%]{display:none}@media (max-width: 575px){.header--logo_link[_ngcontent-%COMP%]   .logo-mobile[_ngcontent-%COMP%]{margin:0!important;display:flex}}.header--user-info[_ngcontent-%COMP%]   .user-info--btn[_ngcontent-%COMP%]{background:none;padding:6px;line-height:24px}.header--user-info[_ngcontent-%COMP%]   .user-info--btn_wrapper[_ngcontent-%COMP%]{max-width:222px;display:flex;justify-content:center;align-items:center;overflow:hidden}.header--user-info[_ngcontent-%COMP%]   .user-info--btn_wrapper[_ngcontent-%COMP%]   .avatar[_ngcontent-%COMP%]{margin-right:4px}.header--user-info[_ngcontent-%COMP%]   .user-info--btn_wrapper[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-right:4px}.header--user-info[_ngcontent-%COMP%]   .user-info--btn_wrapper[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%]{font-size:20px;height:20px;line-height:20px;width:20px}\"],\n      changeDetection: 0\n    });\n  }\n  return ToolBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}