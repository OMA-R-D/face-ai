{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { switchMap, filter, catchError, map } from 'rxjs/operators';\nimport { loadModelStatistics, loadModelStatisticsFail, loadModelStatisticsSuccess } from './actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/core/model/model.service\";\nimport * as i3 from \"@ngrx/store\";\nexport let ModelStatisticsEffect = /*#__PURE__*/(() => {\n  class ModelStatisticsEffect {\n    constructor(actions, modelService, store) {\n      this.actions = actions;\n      this.modelService = modelService;\n      this.store = store;\n      //@createEffect({ dispatch: false })\n      this.loadModelStatistics$ = createEffect(() => this.actions.pipe(ofType(loadModelStatistics), switchMap(data => this.modelService.getStatistics(data.appId, data.modelId).pipe(filter(statistics => !!statistics), map(statistics => loadModelStatisticsSuccess(statistics)), catchError(error => of(loadModelStatisticsFail(error)))))));\n    }\n    static #_ = this.ɵfac = function ModelStatisticsEffect_Factory(t) {\n      return new (t || ModelStatisticsEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ModelService), i0.ɵɵinject(i3.Store));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ModelStatisticsEffect,\n      factory: ModelStatisticsEffect.ɵfac\n    });\n  }\n  return ModelStatisticsEffect;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}