{"ast":null,"code":"import { ofType } from '@ngrx/effects';\nimport { createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, filter, switchMap, tap } from 'rxjs/operators';\nimport { getMaxImageSize, getMaxImageSizeFail, getMaxImageSizeSuccess } from './actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/image-size/image-size.service\";\nimport * as i2 from \"@ngrx/effects\";\nimport * as i3 from \"@ngrx/store\";\nexport let MaxImageSizeEffect = /*#__PURE__*/(() => {\n  class MaxImageSizeEffect {\n    constructor(maxSizeService, actions, store) {\n      this.maxSizeService = maxSizeService;\n      this.actions = actions;\n      this.store = store;\n      //@createEffect({ dispatch: false })\n      this.getMaxSize$ = createEffect(() => this.actions.pipe(ofType(getMaxImageSize), switchMap(() => this.maxSizeService.fetchMaxSize().pipe(filter(data => !!data), tap(data => this.store.dispatch(getMaxImageSizeSuccess(data))), catchError(error => of(getMaxImageSizeFail(error)))))));\n    }\n    static #_ = this.ɵfac = function MaxImageSizeEffect_Factory(t) {\n      return new (t || MaxImageSizeEffect)(i0.ɵɵinject(i1.ImageSizeService), i0.ɵɵinject(i2.Actions), i0.ɵɵinject(i3.Store));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MaxImageSizeEffect,\n      factory: MaxImageSizeEffect.ɵfac\n    });\n  }\n  return MaxImageSizeEffect;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}